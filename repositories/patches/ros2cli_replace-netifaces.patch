diff --git ros2cli/package.xml ros2cli/package.xml
index a7a858b..b3e1a4a 100644
--- ros2cli/package.xml
+++ ros2cli/package.xml
@@ -18,9 +18,9 @@
 
   <exec_depend>python3-argcomplete</exec_depend>
   <exec_depend>python3-importlib-metadata</exec_depend>
-  <exec_depend>python3-netifaces</exec_depend>
   <exec_depend>python3-packaging</exec_depend>
   <exec_depend>python3-pkg-resources</exec_depend>
+  <exec_depend>python3-psutil</exec_depend>
   <exec_depend>rclpy</exec_depend>
 
   <test_depend>ament_copyright</test_depend>
diff --git ros2cli/ros2cli/node/network_aware.py ros2cli/ros2cli/node/network_aware.py
index d188372..e04e406 100644
--- ros2cli/ros2cli/node/network_aware.py
+++ ros2cli/ros2cli/node/network_aware.py
@@ -12,22 +12,17 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-from collections import defaultdict
 import functools
 import inspect
 
-import netifaces
+import psutil
 import rclpy
 
 from ros2cli.node.direct import DirectNode
 
 
 def get_interfaces_ip_addresses():
-    addresses_by_interfaces = defaultdict(functools.partial(defaultdict, set))
-    for interface_name in netifaces.interfaces():
-        for kind, info_list in netifaces.ifaddresses(interface_name).items():
-            for info in info_list:
-                addresses_by_interfaces[kind][interface_name].add(info['addr'])
+    addresses_by_interfaces = psutil.net_if_addrs()
     print(f'Addresses by interfaces: {addresses_by_interfaces}')
     return addresses_by_interfaces
 
diff --git ros2cli/ros2cli/xmlrpc/local_server.py ros2cli/ros2cli/xmlrpc/local_server.py
index e946275..9e3e9e4 100644
--- ros2cli/ros2cli/xmlrpc/local_server.py
+++ ros2cli/ros2cli/xmlrpc/local_server.py
@@ -18,18 +18,16 @@ import struct
 from xmlrpc.server import SimpleXMLRPCRequestHandler  # noqa
 from xmlrpc.server import SimpleXMLRPCServer
 
-import netifaces
+import psutil
 
 
 def get_local_ipaddrs():
-    iplist = []
-    interfaces = netifaces.interfaces()
-    for interface in interfaces:
-        addrs = netifaces.ifaddresses(interface)
-        if netifaces.AF_INET in addrs.keys():
-            for value in addrs[netifaces.AF_INET]:
-                iplist.append(value['addr'])
-    return iplist
+    return [
+        addr.address
+        for _, addrs in psutil.net_if_addrs().items()
+        for addr in addrs
+        if addr.family == socket.AF_INET
+    ]
 
 
 class LocalXMLRPCServer(SimpleXMLRPCServer):
