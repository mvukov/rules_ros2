From ed86a401c42e821733e02b4a262d53f9c9576874 Mon Sep 17 00:00:00 2001
From: Chris Lalancette <clalancette@gmail.com>
Date: Tue, 17 Sep 2024 18:23:10 -0400
Subject: [PATCH] Fix setting allocator to NULL. (#478)

* Fix setting allocator to NULL.

That is, previously the code was setting the allocator at
runtime, not during static initialization.  Switch to static
initialization, which should fix a possible race.

* Statically initialize all zero_initialized functions.

Signed-off-by: Chris Lalancette <clalancette@gmail.com>
---
 src/allocator.c      | 8 +-------
 src/array_list.c     | 2 +-
 src/char_array.c     | 8 +-------
 src/hash_map.c       | 2 +-
 src/shared_library.c | 5 +----
 src/string_array.c   | 6 +-----
 src/string_map.c     | 3 +--
 src/uint8_array.c    | 7 +------
 8 files changed, 8 insertions(+), 33 deletions(-)

diff --git src/allocator.c src/allocator.c
index 0309da9..c351127 100644
--- src/allocator.c
+++ src/allocator.c
@@ -65,13 +65,7 @@ __default_zero_allocate(size_t number_of_elements, size_t size_of_element, void
 rcutils_allocator_t
 rcutils_get_zero_initialized_allocator(void)
 {
-  static rcutils_allocator_t zero_allocator = {
-    .allocate = NULL,
-    .deallocate = NULL,
-    .reallocate = NULL,
-    .zero_allocate = NULL,
-    .state = NULL,
-  };
+  static rcutils_allocator_t zero_allocator = {0};
   return zero_allocator;
 }
 
diff --git src/array_list.c src/array_list.c
index a9a08db..8761cec 100644
--- src/array_list.c
+++ src/array_list.c
@@ -44,7 +44,7 @@ typedef struct rcutils_array_list_impl_s
 rcutils_array_list_t
 rcutils_get_zero_initialized_array_list(void)
 {
-  static rcutils_array_list_t zero_initialized_array_list = {NULL};
+  static rcutils_array_list_t zero_initialized_array_list = {0};
   return zero_initialized_array_list;
 }
 
diff --git src/char_array.c src/char_array.c
index f36a883..f66b262 100644
--- src/char_array.c
+++ src/char_array.c
@@ -21,13 +21,7 @@
 rcutils_char_array_t
 rcutils_get_zero_initialized_char_array(void)
 {
-  static rcutils_char_array_t char_array = {
-    .buffer = NULL,
-    .owns_buffer = true,
-    .buffer_length = 0u,
-    .buffer_capacity = 0u
-  };
-  char_array.allocator = rcutils_get_zero_initialized_allocator();
+  static rcutils_char_array_t char_array = {0};
   return char_array;
 }
 
diff --git src/hash_map.c src/hash_map.c
index ecab884..2a7dbef 100644
--- src/hash_map.c
+++ src/hash_map.c
@@ -77,7 +77,7 @@ int rcutils_hash_map_string_cmp_func(const void * val1, const void * val2)
 rcutils_hash_map_t
 rcutils_get_zero_initialized_hash_map()
 {
-  static rcutils_hash_map_t zero_initialized_hash_map = {NULL};
+  static rcutils_hash_map_t zero_initialized_hash_map = {0};
   return zero_initialized_hash_map;
 }
 
diff --git src/shared_library.c src/shared_library.c
index 0190afc..721dbf6 100644
--- src/shared_library.c
+++ src/shared_library.c
@@ -56,10 +56,7 @@ C_ASSERT(sizeof(char) == sizeof(TCHAR));
 rcutils_shared_library_t
 rcutils_get_zero_initialized_shared_library(void)
 {
-  rcutils_shared_library_t zero_initialized_shared_library;
-  zero_initialized_shared_library.library_path = NULL;
-  zero_initialized_shared_library.lib_pointer = NULL;
-  zero_initialized_shared_library.allocator = rcutils_get_zero_initialized_allocator();
+  static rcutils_shared_library_t zero_initialized_shared_library = {0};
   return zero_initialized_shared_library;
 }
 
diff --git src/string_array.c src/string_array.c
index 40adb54..e279a37 100644
--- src/string_array.c
+++ src/string_array.c
@@ -28,11 +28,7 @@ extern "C"
 rcutils_string_array_t
 rcutils_get_zero_initialized_string_array(void)
 {
-  static rcutils_string_array_t array = {
-    .size = 0,
-    .data = NULL,
-  };
-  array.allocator = rcutils_get_zero_initialized_allocator();
+  static rcutils_string_array_t array = {0};
   return array;
 }
 
diff --git src/string_map.c src/string_map.c
index ab3c5b7..090cd91 100644
--- src/string_map.c
+++ src/string_map.c
@@ -41,8 +41,7 @@ typedef struct rcutils_string_map_impl_s
 rcutils_string_map_t
 rcutils_get_zero_initialized_string_map(void)
 {
-  static rcutils_string_map_t zero_initialized_string_map;
-  zero_initialized_string_map.impl = NULL;
+  static rcutils_string_map_t zero_initialized_string_map = {0};
   return zero_initialized_string_map;
 }
 
diff --git src/uint8_array.c src/uint8_array.c
index 5c34803..844d370 100644
--- src/uint8_array.c
+++ src/uint8_array.c
@@ -18,12 +18,7 @@
 rcutils_uint8_array_t
 rcutils_get_zero_initialized_uint8_array(void)
 {
-  static rcutils_uint8_array_t uint8_array = {
-    .buffer = NULL,
-    .buffer_length = 0lu,
-    .buffer_capacity = 0lu
-  };
-  uint8_array.allocator = rcutils_get_zero_initialized_allocator();
+  static rcutils_uint8_array_t uint8_array = {0};
   return uint8_array;
 }
 
-- 
2.34.1

