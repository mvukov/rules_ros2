diff --git a/rclcpp/include/rclcpp/create_generic_publisher.hpp b/rclcpp/include/rclcpp/create_generic_publisher.hpp
index 296446f7..f636c7fd 100644
--- a/rclcpp/include/rclcpp/create_generic_publisher.hpp
+++ b/rclcpp/include/rclcpp/create_generic_publisher.hpp
@@ -47,15 +47,15 @@ std::shared_ptr<GenericPublisher> create_generic_publisher(
   const std::string & topic_name,
   const std::string & topic_type,
   const rclcpp::QoS & qos,
+  std::shared_ptr<rcpputils::SharedLibrary> ts_lib,
   const rclcpp::PublisherOptionsWithAllocator<AllocatorT> & options = (
     rclcpp::PublisherOptionsWithAllocator<AllocatorT>()
   )
 )
 {
-  auto ts_lib = rclcpp::get_typesupport_library(topic_type, "rosidl_typesupport_cpp");
   auto pub = std::make_shared<GenericPublisher>(
     topics_interface->get_node_base_interface(),
-    std::move(ts_lib),
+    ts_lib,
     topic_name,
     topic_type,
     qos,
diff --git a/rclcpp/include/rclcpp/create_generic_subscription.hpp b/rclcpp/include/rclcpp/create_generic_subscription.hpp
index f5281cc6..72a47c35 100644
--- a/rclcpp/include/rclcpp/create_generic_subscription.hpp
+++ b/rclcpp/include/rclcpp/create_generic_subscription.hpp
@@ -52,17 +52,15 @@ std::shared_ptr<GenericSubscription> create_generic_subscription(
   const std::string & topic_type,
   const rclcpp::QoS & qos,
   std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)> callback,
+  std::shared_ptr<rcpputils::SharedLibrary> ts_lib,
   const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT> & options = (
     rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>()
   )
 )
 {
-  auto ts_lib = rclcpp::get_typesupport_library(
-    topic_type, "rosidl_typesupport_cpp");
-
   auto subscription = std::make_shared<GenericSubscription>(
     topics_interface->get_node_base_interface(),
-    std::move(ts_lib),
+    ts_lib,
     topic_name,
     topic_type,
     qos,
diff --git a/rclcpp/include/rclcpp/node.hpp b/rclcpp/include/rclcpp/node.hpp
index 65b87977..43699b0e 100644
--- a/rclcpp/include/rclcpp/node.hpp
+++ b/rclcpp/include/rclcpp/node.hpp
@@ -37,6 +37,8 @@
 #include "rcl_interfaces/msg/parameter_event.hpp"
 #include "rcl_interfaces/msg/set_parameters_result.hpp"
 
+#include "rcpputils/shared_library.hpp"
+
 #include "rclcpp/callback_group.hpp"
 #include "rclcpp/client.hpp"
 #include "rclcpp/clock.hpp"
@@ -1298,6 +1300,18 @@ protected:
 private:
   RCLCPP_DISABLE_COPY(Node)
 
+  std::shared_ptr<rcpputils::SharedLibrary> create_ts_lib(const std::string& topic_type) {
+    std::lock_guard<std::mutex> lock(topic_types_to_ts_libs_mutex_);
+    if (topic_types_to_ts_libs_.count(topic_type) == 0) {
+      topic_types_to_ts_libs_[topic_type] =
+          rclcpp::get_typesupport_library(topic_type, "rosidl_typesupport_cpp");
+    }
+    return topic_types_to_ts_libs_[topic_type];
+  }
+
+  std::map<std::string, std::shared_ptr<rcpputils::SharedLibrary>> topic_types_to_ts_libs_;
+  std::mutex topic_types_to_ts_libs_mutex_;
+
   rclcpp::node_interfaces::NodeBaseInterface::SharedPtr node_base_;
   rclcpp::node_interfaces::NodeGraphInterface::SharedPtr node_graph_;
   rclcpp::node_interfaces::NodeLoggingInterface::SharedPtr node_logging_;
diff --git a/rclcpp/include/rclcpp/node_impl.hpp b/rclcpp/include/rclcpp/node_impl.hpp
index 086c2bb1..7a2fbb12 100644
--- a/rclcpp/include/rclcpp/node_impl.hpp
+++ b/rclcpp/include/rclcpp/node_impl.hpp
@@ -166,6 +166,7 @@ Node::create_generic_publisher(
     extend_name_with_sub_namespace(topic_name, this->get_sub_namespace()),
     topic_type,
     qos,
+    create_ts_lib(topic_type),
     options
   );
 }
@@ -185,6 +186,7 @@ Node::create_generic_subscription(
     topic_type,
     qos,
     std::move(callback),
+    create_ts_lib(topic_type),
     options
   );
 }
