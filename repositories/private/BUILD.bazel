load("@rules_python//python:defs.bzl", "py_binary", "py_test")
load("@rules_python//python:pip.bzl", "compile_pip_requirements")
load("@rules_ros2_resolver_deps//:requirements.bzl", "requirement")

compile_pip_requirements(
    name = "requirements",
    requirements_in = ":resolver_requirements.txt",
    requirements_txt = ":resolver_requirements_lock.txt",
    tags = ["manual"],
)

py_binary(
    name = "resolver",
    srcs = ["resolver.py"],
    args = [
        "--repos=$(rootpath @ros2//:repos)",
        "--repo_mappings=$(rootpath //repositories:ros2_repo_mappings.yaml)",
        "--output=$(rootpath //repositories:ros2_repositories_impl.bzl)",
    ],
    data = [
        "@com_github_mvukov_rules_ros2//repositories:ros2_repo_mappings.yaml",
        "@com_github_mvukov_rules_ros2//repositories:ros2_repositories_impl.bzl",
        "@ros2//:repos",
    ],
    deps = [
        requirement("aiofile"),
        requirement("aiohttp"),
        requirement("pyyaml"),
        requirement("tqdm"),
    ],
)

py_test(
    name = "tests",
    size = "small",
    srcs = ["ros2_repo_mappings_tests.py"],
    data = ["@com_github_mvukov_rules_ros2//repositories:ros2_repo_mappings.yaml"],
    main = "ros2_repo_mappings_tests.py",
    deps = [requirement("pyyaml")],
)
