load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library", "cc_test")
load("//ros2:plugin.bzl", "ros2_plugin")
load("//ros2:test.bzl", "ros2_test")

cc_library(
    name = "polygon_base",
    hdrs = ["regular_polygon.h"],
)

cc_library(
    name = "_polygon_plugins",
    srcs = ["polygon_plugins.cc"],
    deps = [
        ":polygon_base",
        "@ros2_pluginlib//:pluginlib",
    ],
    # This must be set such that static plugin registration works.
    alwayslink = True,
)

ros2_plugin(
    name = "polygon_plugins",
    base_class_type = "polygon_base::RegularPolygon",
    class_types = [
        "polygon_plugins::Square",
        "polygon_plugins::Triangle",
    ],
    dep = ":_polygon_plugins",
)

# TODO(mvukov) Dig deeper into why cc_test doesn't work here.
cc_binary(
    name = "plugin_tests",
    srcs = ["plugin_tests.cc"],
    data = [":polygon_plugins"],
    # Must be linked as a dynamic one such that pluginlib static variables are
    # correctly initialized. alwayslink=True doesn't work. Keep in mind that
    # pluginlib is a header-only library.
    linkstatic = False,
    deps = [
        ":polygon_base",
        "@com_google_googletest//:gtest_main",
        "@ros2_pluginlib//:pluginlib",
    ],
)

ros2_test(
    name = "tests",
    launch_file = "tests.py",
    nodes = [":plugin_tests"],
)
