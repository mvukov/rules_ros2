load("@rules_cc//cc:defs.bzl", "cc_library")
load("@rules_python//python:defs.bzl", "py_test")
load("//ros2:ament.bzl", "ros2_ament_setup")
load("//ros2:cc_defs.bzl", "ros2_cpp_binary", "ros2_cpp_test")
load("//ros2:plugin.bzl", "ros2_plugin")

cc_library(
    name = "polygon_base",
    hdrs = ["regular_polygon.h"],
)

ros2_plugin(
    name = "square",
    srcs = ["square.cc"],
    plugin_specs = [
        {
            "class_type": "polygon_plugins::Square",
            "base_class_type": "polygon_base::RegularPolygon",
        },
    ],
    deps = [
        ":polygon_base",
        "@ros2_pluginlib//:pluginlib",
    ],
)

ros2_plugin(
    name = "triangle",
    srcs = ["triangle.cc"],
    plugin_specs = [
        {
            "class_type": "polygon_plugins::Triangle",
            "base_class_type": "polygon_base::RegularPolygon",
        },
    ],
    deps = [
        ":polygon_base",
        "@ros2_pluginlib//:pluginlib",
    ],
)

ros2_cpp_test(
    name = "tests",
    srcs = ["plugin_tests.cc"],
    data = [
        ":square",
        ":triangle",
    ],
    set_up_ament = True,
    deps = [
        ":polygon_base",
        "@com_google_googletest//:gtest_main",
        "@ros2_pluginlib//:pluginlib",
    ],
)

ros2_cpp_binary(
    name = "py_loader.so",
    srcs = ["py_loader.cc"],
    linkshared = True,
    deps = [
        ":polygon_base",
        "@pybind11",
        "@ros2_pluginlib//:pluginlib",
    ],
)

ros2_ament_setup(
    name = "polygon_plugins_ament_setup",
    package_name = package_name(),
    deps = [
        ":square",
        ":triangle",
    ],
)

py_test(
    name = "py_loader_tests",
    srcs = [
        "py_loader_tests.py",
    ],
    data = [
        ":polygon_plugins_ament_setup",
        ":py_loader.so",
    ],
)
