load("@com_github_mvukov_rules_ros2//ros2:bag.bzl", "ros2_bag")
load("@com_github_mvukov_rules_ros2//ros2:cc_defs.bzl", "ros2_cpp_binary")
load("@com_github_mvukov_rules_ros2//ros2:py_defs.bzl", "ros2_py_test")
load("@com_github_mvukov_rules_ros2//ros2:test.bzl", "ros2_test")
load("@rules_ros2_pip_deps//:requirements.bzl", "requirement")

ros2_cpp_binary(
    name = "publisher",
    srcs = ["publisher.cc"],
    deps = [
        "@ros2_common_interfaces//:cpp_std_msgs",
        "@ros2_rclcpp//:rclcpp",
    ],
)

ros2_cpp_binary(
    name = "recorder",
    srcs = ["recorder.cc"],
    deps = [
        "@ros2_common_interfaces//:cpp_std_msgs",
        "@ros2_rclcpp//:rclcpp",
        "@ros2_rosbag2//:rosbag2_storage",
        "@ros2_rosbag2//:rosbag2_transport",
    ],
)

ros2_bag(
    name = "bag",
    idl_deps = [
        "@ros2_common_interfaces//:std_msgs",
        "@ros2_rcl_interfaces//:rcl_interfaces",
        "@ros2_rosbag2//:rosbag2_interfaces",
    ],
)

[
    ros2_test(
        name = "{}_tests".format(storage_id),
        size = "small",
        data = [
            ":bag",
        ],
        env = {
            "STORAGE_ID": storage_id,
        },
        idl_deps = [
            "@ros2_common_interfaces//:std_msgs",
            "@ros2_rcl_interfaces//:rcl_interfaces",
            "@ros2_rosbag2//:rosbag2_interfaces",
        ],
        launch_file = "tests.py",
        nodes = [
            ":publisher",
            ":recorder",
        ],
        deps = [requirement("pyyaml")],
    )
    for storage_id in [
        "mcap",
        "sqlite3",
    ]
]

ros2_py_test(
    name = "write_to_bag_tests",
    srcs = ["write_to_bag_tests.py"],
    main = "write_to_bag_tests.py",
    set_up_ament = True,
    deps = [
        "@ros2_common_interfaces//:py_nav_msgs",
        "@ros2_rclpy//:rclpy",
        "@ros2_rosbag2//:rosbag2_py",
        requirement("pytest"),
    ],
)
