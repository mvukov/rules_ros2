module(name = "rules_ros2_examples")

bazel_dep(name = "com_github_mvukov_rules_ros2")
local_path_override(
    module_name = "com_github_mvukov_rules_ros2",
    path = "..",
)

bazel_dep(name = "rules_cc", version = "0.1.1")
bazel_dep(name = "rules_python", version = "1.1.0")
bazel_dep(name = "rules_rust", version = "0.59.2")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    is_default = True,
    # You must pin the Python version to the one used for rules_ros2_pip_deps_numpy_headers and current_py_cc_headers in rules_ros2.
    # Otherwise you will get errors at analysis time like:
    #     configurable attribute "actual" in @@rules_python~~pip~rules_ros2_pip_deps//numpy:_no_matching_repository doesn't match this configuration: No matching wheel for current configuration's Python version.
    #     The current build configuration's Python version doesn't match any of the Python wheels available for this distribution.
    python_version = "3.10",
)

register_toolchains(
    "@com_github_mvukov_rules_ros2//repositories/rust:bindgen_toolchain",
    dev_dependency = True,
)

rules_ros2_non_module_deps = use_extension("@com_github_mvukov_rules_ros2//ros2:extensions.bzl", "non_module_deps")
use_repo(
    rules_ros2_non_module_deps,
    # Check the rules_ros2 root MODULE.bazel for a full list of available non-module repos
    # Required for bazel test:
    "ros2_common_interfaces",
    "ros2_launch",
    "ros2_launch_ros",
    "ros2_rcl_interfaces",
    "ros2_rclcpp",
    # Required for bazel run:
    "ros2_rclpy",
    "ros2_rosidl",
)
